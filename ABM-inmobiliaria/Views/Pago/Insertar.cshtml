@using System.Globalization
@model Pago

@{
    ViewData["Title"] = "Agregar nuevo pago";
    var contratos = (IList<Contrato>)ViewBag.Contratos;
}


<style>
    body {
        background-color: #f8f9fa;
    }

    .label-avatar {
        margin-left: 30px;
    }

    .form-login {
        background-color: #fff;
        border: 1px solid #dee2e6;
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .form-group {
        margin-bottom: 20px;
    }

    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
        /* Hacer que el botón ocupe el ancho de los inputs */
    }

    .btn-primary:hover {
        background-color: #0056b3;
        border-color: #0056b3;
    }

    /* Estilo para alinear el botón a la derecha */
    .align-right {
        margin-left: auto;
    }

    legend {
        color: #fff;
        background-color: #007bff;
        border: 1px solid #007bff;
        border-bottom-color: transparent;
    }
</style>


<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="form-login">
                <form asp-controller="Pago" asp-action="Insertar" method="post">

                    <fieldset class="border p-2 mb-4">
                        <legend class="w-100 font-weight-light mb-4" style="display: block;">Insertar nuevo pago
                        </legend>

                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        

                        <div class="form-group mb-4">
                            <label class="control-label">Mes</label>
                            <select class="form-control" name="Detalle">
                                @for (int i = 1; i <= 12; i++)
                                {
                                    <option value="@DateTimeFormatInfo.CurrentInfo.GetMonthName(i)">
                                        @DateTimeFormatInfo.CurrentInfo.GetMonthName(i)</option>
                                }
                            </select>
                            <span asp-validation-for="Detalle" class="text-danger"></span>
                        </div>

                        <div class="input-group mb-3">
                            <span class="input-group-text" id="basic-addon1">Fecha</span>
                            <input type="date" class="form-control" id="datepicker" asp-for="Fecha" name="Fecha"
                                aria-describedby="basic-addon1" value="@DateTime.Now.ToString("yyyy-MM-dd")">
                        </div>

                        @if (@Model.Contrato == null)
                        {

                            <div class="form-group">
                                <label class="control-label">Contratos</label>
                                <select class="form-control" name="IdContrato">
                                    @foreach (var item in contratos)
                                    {
                                        <option value="@item.Id">@(item.Id) - @item.Propietario.Apellido - @item.Inquilino.Apellido</option>
                                    }
                                </select>
                                <span asp-validation-for="IdContrato" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label asp-for="Importe" class="control-label"></label>
                                <input asp-for="Importe" class="form-control" type="number" step="any" >
                                <span asp-validation-for="Importe" class="text-danger"></span>
                            </div>
                        }
                        else
                        {
                            <div class="form-group">
                                <label asp-for="Importe" class="control-label">Importe desde contrato</label>
                                <input asp-for="Importe" class="form-control" type="text" step="any" min="1" value="@Model.Contrato.MontoMensual" />
                                <span asp-validation-for="Importe" class="text-danger"></span>
                            </div>

                            <input type="hidden" asp-for="IdContrato" />
                        }

                        <button type="submit" class="btn btn-success mt-3 w-100">Guardar</button>
                    </fieldset>
                </form>
            </div>
        </div>
    </div>
</div>


<script>
    document.addEventListener("DOMContentLoaded", function() {
        // Obtener el elemento de entrada del importe
        var importeInput = document.getElementById("Importe");

        // Agregar un event listener para el evento 'input'
        importeInput.addEventListener("input", function() {
            var importeValue = parseFloat(importeInput.value);

            // Verificar si el valor es menor o igual a cero
            if (importeValue <= 0 || isNaN(importeValue)) {
                // Si el valor es inválido, establecer un mensaje de error
                importeInput.setCustomValidity("El importe debe ser un número válido y mayor que cero.");
            } else {
                // Si el valor es válido, borrar cualquier mensaje de error
                importeInput.setCustomValidity("");
            }
        });
    });
</script>